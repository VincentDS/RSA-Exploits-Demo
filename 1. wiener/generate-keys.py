import binascii

def stringToLong(s):
    return long(binascii.hexlify(s), 16)

def longToString(n):
    return binascii.unhexlify("%x" % n)

def encrypt(message, e, n):
    return pow(message, e, n)

if __name__ == '__main__':
    m1 = "Message unlocked! https://pastebin.com/4KWiwWHK"
    m2 = "Message unlocked! https://pastebin.com/BEwXNKWZ"
    m3 = "Message unlocked! https://pastebin.com/PVKfXnzk"

    nlist = list()
    elist = list()

    with open('public-keys.txt') as f:
        while True:
            n = f.readline()[4:]
            if n == '':
                break
            e = f.readline()[4:]
            f.readline()
            nlist.append(long(n,10))
            elist.append(long(e,10))

    c1 = encrypt(stringToLong(m1), elist[0], nlist[0])
    c2 = encrypt(stringToLong(m2), elist[1], nlist[1])
    c3 = encrypt(stringToLong(m3), elist[2], nlist[2])
    print c1
    print c2
    print c3
